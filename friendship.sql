
--------------------------------------------------------------------------
-- CREATION DES TABLES SOUS PHPMYADMIN
CREATE TABLE `users` (
 `id` int(11) NOT NULL AUTO_INCREMENT,
 `firstname` varchar(255) NOT NULL,
 `lastname` varchar(255) NOT NULL,
 `email` varchar(255) NOT NULL,
 `pseudo` varchar(255) NOT NULL,
 `password` varchar(255) NOT NULL,
 PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4


CREATE TABLE `friendship` (
 `USER_ID` int(11) NOT NULL,
 `ID_FRIEND` int(11) NOT NULL,
 `STATE` int(11) NOT NULL,
 `DATE_STATE` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4

	CREATE TABLE `state_friendship` (
 `ID_TYPE_FRIEND` int(11) NOT NULL AUTO_INCREMENT,
 `TYPE_FRIEND` varchar(20) NOT NULL,
 PRIMARY KEY (`ID_TYPE_FRIEND`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4

-- INSERTION DES DONNEES : TYPE D'ETAT DE RELATION SOUS PHPMYADMIN

INSERT INTO STATE_FRIENDSHIP (TYPE_FRIEND) VALUES ('Send friend request') --1
INSERT INTO STATE_FRIENDSHIP (TYPE_FRIEND) VALUES ('Accept friend request') --2
INSERT INTO STATE_FRIENDSHIP (TYPE_FRIEND) VALUES ('Refuse friend request') --3

-- RESULTAT DES REQUETES DE CREATION DE PROCEDURE SOUS PHPMYADMIN
DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `ACCEPT_FRIEND_REQUEST`(IN `UID` INT, IN `IDF` INT)
    NO SQL
BEGIN
	DECLARE NB INT;
	SELECT COUNT(*) INTO NB FROM friendship WHERE USER_ID = IDF AND ID_FRIEND = UID;
    IF NB != 0 THEN
    	UPDATE FRIENDSHIP SET STATE = 2, DATE_STATE = CURRENT_TIMESTAMP() WHERE USER_ID = IDF AND ID_FRIEND = UID;
		INSERT INTO `friendship` (`USER_ID`, `ID_FRIEND`, `STATE`, `DATE_STATE`) VALUES (UID, IDF, '2', current_timestamp());
    	SET @p0=UID; SET @p1=IDF; CALL `GET_SPEC_FRIEND`(@p1, @p0);
	ELSE 
    	SELECT 'Friend request already send' AS RESPONSE;
	END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GET_INVITATION`(IN `UID` INT)
    NO SQL
BEGIN
	SELECT USER_ID, DATE_STATE FROM friendship WHERE ID_FRIEND = UID AND STATE = 1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GET_ALL_RELATION`(IN `UID` INT)
    NO SQL
BEGIN
	SELECT ID_FRIEND, DATE_STATE, STATE FROM friendship WHERE USER_ID = UID;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GET_POTENTIAL_FRIENDS`(IN `UID` INT)
    NO SQL
BEGIN
	SELECT * FROM users WHERE ID NOT IN (SELECT ID_FRIEND FROM friendship WHERE USER_ID = UID) AND ID NOT IN (SELECT USER_ID FROM friendship WHERE ID_FRIEND = UID) AND ID != UID;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GET_FRIENDS`(IN `UID` INT)
    NO SQL
BEGIN
	SELECT ID_FRIEND FROM friendship WHERE USER_ID = UID AND STATE = 2;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GET_SEND`(IN `UID` INT)
    NO SQL
BEGIN
	SELECT ID_FRIEND, DATE_STATE FROM friendship WHERE USER_ID = UID AND STATE = 1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GET_SPEC_FRIEND`(IN `UID` INT, IN `IDF` INT)
    READS SQL DATA
SELECT * FROM `friendship` WHERE USER_ID = UID AND ID_FRIEND = IDF$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `REFUSE_FRIEND_REQUEST`(IN `UID` INT, IN `IDF` INT)
    NO SQL
BEGIN
	DECLARE NB INT;
	SELECT COUNT(*) INTO NB FROM friendship WHERE USER_ID = IDF AND ID_FRIEND = UID;
    IF NB != 0 THEN
    	UPDATE FRIENDSHIP SET STATE = 3, DATE_STATE = CURRENT_TIMESTAMP() WHERE (USER_ID = IDF AND ID_FRIEND = UID) OR (USER_ID = UID AND ID_FRIEND = IDF);
    	SET @p0=UID; SET @p1=IDF; CALL `GET_SPEC_FRIEND`(@p1, @p0);
	ELSE 
    	SELECT 'Friend request already send' AS RESPONSE;
	END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SEND_FRIEND_REQUEST`(IN `UID` INT, IN `IDF` INT)
    MODIFIES SQL DATA
BEGIN
	DECLARE NB INT;
	SELECT COUNT(*) INTO NB FROM friendship WHERE USER_ID = UID AND ID_FRIEND = IDF;
    IF NB = 0 THEN
		INSERT INTO `friendship` (`USER_ID`, `ID_FRIEND`, `STATE`, `DATE_STATE`) VALUES (UID, IDF, '1', current_timestamp());
    	SET @p0=UID; SET @p1=IDF; CALL `GET_SPEC_FRIEND`(@p0, @p1);
	ELSE 
    	SELECT 'Friend request already send' AS RESPONSE;
	END IF;
END$$
DELIMITER ;
